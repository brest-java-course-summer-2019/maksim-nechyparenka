<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <tx:annotation-driven/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <!--                ProductDao SQL properties-->
                <value>classpath:ProductDaoSQL/addProductSQL.properties</value>
                <value>classpath:ProductDaoSQL/deleteProductSQL.properties</value>
                <value>classpath:ProductDaoSQL/findAllProductsSQL.properties</value>
                <value>classpath:ProductDaoSQL/findByProductCategoryIdSQL.properties</value>
                <value>classpath:ProductDaoSQL/findProductByIdSQL.properties</value>
                <value>classpath:ProductDaoSQL/updateProductSQL.properties</value>
                <!--                CustomerDao SQL properties-->
                <value>classpath:CustomerDaoSQL/addCustomerSQL.properties</value>
                <value>classpath:CustomerDaoSQL/deleteCustomerSQL.properties</value>
                <value>classpath:CustomerDaoSQL/findAllCustomersSQL.properties</value>
                <value>classpath:CustomerCategoryDaoSQL/findByCustomerCategoryIdSQL.properties</value>
                <value>classpath:CustomerDaoSQL/findByCustomerIdSQL.properties</value>
                <value>classpath:CustomerDaoSQL/updateCustomerSQL.properties</value>
                <!--                CustomerCategoryDao SQL properties-->
                <value>classpath:CustomerCategoryDaoSQL/addCustomerCategorySQL.properties</value>
                <value>classpath:CustomerCategoryDaoSQL/deleteCustomerCategorySQL.properties</value>
                <value>classpath:CustomerCategoryDaoSQL/findAllCustomersCategorySQL.properties</value>
                <value>classpath:CustomerCategoryDaoSQL/findCustomerCategoryByIdSQL.properties</value>
                <value>classpath:CustomerCategoryDaoSQL/updateCustomerCategorySQL.properties</value>
                <!--                ProductCategoryDao SQL properties-->
                <value>classpath:ProductCategoryDaoSQL/addProductCategorySQL.properties</value>
                <value>classpath:ProductCategoryDaoSQL/findAllProductsCategorySQL.properties</value>
                <value>classpath:ProductCategoryDaoSQL/findProductCategoryByIdSQL.properties</value>
                <value>classpath:ProductCategoryDaoSQL/updateProductCategorySQL.properties</value>
                <value>classpath:ProductCategoryDaoSQL/deleteProductCategorySQL.properties</value>
            </list>
        </property>
    </bean>

    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="productDao" class="com.epam.brest.summer.courses2019.dao.ProductDaoJdbcImpl">
        <constructor-arg name="namedParameterJdbcTemplate" ref="namedParameterJdbcTemplate"/>
    </bean>

    <bean id="productService" class="com.epam.brest.summer.courses2019.service.ProductServiceImpl">
        <constructor-arg ref="productDao"/>
    </bean>

    <bean id="customerDao" class="com.epam.brest.summer.courses2019.dao.CustomerDaoJdbcImpl">
        <constructor-arg name="namedParameterJdbcTemplate" ref="namedParameterJdbcTemplate"/>
    </bean>

    <bean id="customerService" class="com.epam.brest.summer.courses2019.service.CustomerServiceImpl">
        <constructor-arg ref="customerDao"/>
    </bean>


</beans>